# This is the main configuration file for the application.
# ~~~~~
application.name=culture-hub

# Application mode
# ~~~~~
# Set to dev to enable instant reloading and other development help.
# Otherwise set to prod.
application.mode=dev
%prod.application.mode=prod

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions
# If you deploy your application to several instances be sure to use the same key !
application.secret=yR72gsHAR9BbdfdChFBLwQv69IhOvjMxqBm0lniRjKvQF72NTZJ33kq6EPVVcHkP

# i18n
# ~~~~~
# Define locales used by your application.
# You can then place localized messages in conf/messages.{locale} files
# application.langs=fr,en,ja

# Date format
# ~~~~~
date.format=yyyy-MM-dd
# date.format.fr=dd/MM/yyyy

# Server configuration
# ~~~~~
# If you need to change the HTTP port, uncomment this (default is set to 9000)
# http.port=9000
#
# By default the server listen for HTTP on the wilcard address.
# You can restrict this.
# http.address=127.0.0.1
#
# Use this if you don't host your Play application at the root of the domain
# you're serving it from. This parameter has no effect when deployed as a
# war, because the path will be handled by the application server.
# http.path=/

# Session configuration
# ~~~~~~~~~~~~~~~~~~~~~~
# By default, session will be written to the transient PLAY_SESSION cookie.
# The cookies are not secured by default, only set it to true
# if you're serving your pages through https.
# application.session.cookie=PLAY
# application.session.maxAge=1h
# application.session.secure=false

# Session/Cookie sharing between subdomain
# ~~~~~~~~~~~~~~~~~~~~~~
# By default a cookie is only valid for a specific domain. By setting
# application.defaultCookieDomain to '.example.com', the cookies
# will be valid for all domains ending with '.example.com', ie:
# foo.example.com and bar.example.com
# application.defaultCookieDomain=.example.com

# JVM configuration
# ~~~~~
# Define which port is used by JPDA when application is in debug mode (default is set to 8000)
# jpda.port=8000
#
# Java source level => 1.5, 1.6 or 1.7 (experimental)
# java.source=1.5

# this is only applied if no other Xm* args are passed via the command line
jvm.memory=-XX:MaxPermSize=128m -Xms512m -Xmx512m -Xss4m

# Log level
# ~~~~~
# Specify log level for your application.
# If you want a very customized log, create a log4j.properties file in the conf directory
# application.log=INFO
#
# More logging configuration
# application.log.path=/log4j.properties
# application.log.system.out=off

# Database configuration
# ~~~~~

# Name of the mongo database
db.cultureHub.name=culturehub

# Name of the fileStore database (for file uploads)
db.fileStore.name=fileStore

# Memcached configuration
# ~~~~~ 
# Enable memcached if needed. Otherwise a local cache is used.
# memcached=enabled
#
# Specify memcached host (default to 127.0.0.1:11211)
# memcached.host=127.0.0.1:11211
#
# Or you can specify multiple host to build a distributed cache
# memcached.1.host=127.0.0.1:11211
# memcached.2.host=127.0.0.1:11212

# HTTP Response headers control for static files
# ~~~~~
# Set the default max-age, telling the user's browser how long it should cache the page.
# Default is 3600 (one hour). Set it to 0 to send no-cache.
# This is only read in prod mode, in dev mode the cache is disabled.
# http.cacheControl=3600

# If enabled, Play will generate entity tags automatically and send a 304 when needed.
# Default is true, set it to false to deactivate use of entity tags.
# http.useETag=true

# Custom mime types
# mimetype.xpi=application/x-xpinstall

# WS configuration
# ~~~~~
# Default engine is Async Http Client, uncomment to use
# the JDK's internal implementation
# webservice = urlfetch
# If you need to set proxy params for WS requests
# http.proxyHost = localhost
# http.proxyPort = 3128
# http.proxyUser = jojo
# http.proxyPassword = jojo

# Mail configuration
# ~~~~~ 
# Default is to use a mock Mailer
mail.smtp=mock

# Or, specify mail host configuration
%prod.mail.smtp.host=smtp.hostice.nl

# Url-resolving in Jobs
# ~~~~~~
# When rendering templates with reverse-url-resoling (@@{..}) in Jobs (which do not have an inbound Http.Request),
# ie if sending a HtmlMail, Play need to know which url your users use when accessing your app.
# %test.application.baseUrl=http://localhost:9000/
# %prod.application.baseUrl=http://www.yourdomain.com/

# Jobs executor
# ~~~~~~
# Size of the Jobs pool
# play.jobs.pool=10

# Execution pool
# ~~~~~
# Default to 1 thread in DEV mode or (nb processors + 1) threads in PROD mode.
# Try to keep a low as possible. 1 thread will serialize all requests (very useful for debugging purpose)
%prod.play.pool=3
play.pool=1

# Open file from errors pages
# ~~~~~
# If your text editor supports opening files by URL, Play! will
# dynamically link error pages to files 
#
# Example, for textmate:
# play.editor=txmt://open?url=file://%s&line=%s

# see this page for an intellij setup: http://groups.google.com/group/play-framework/browse_thread/thread/0d198ee8c2fa5949
play.editor=http://localhost:8091/?message=%s:%s

# Testing. Set up a custom configuration for test mode
# ~~~~~
%test.application.mode=dev
%test.mail.smtp=mock
%test.db.cultureHub.name=culturehub-TEST
%test.db.fileStore.name=fileStore-TEST



###### Culture-Hub

# Absolute path to GraphicsMagick (e.g. /usr/local/bin/gm)
%manu.image.graphicsmagic.cmd=/opt/local/bin/gm
%sjoerd.image.graphicsmagic.cmd=/usr/local/bin/gm
%gerald.image.graphicsmagic.cmd=/usr/local/bin/gm
%eric.image.graphicsmagic.cmd=/usr/local/bin/gm
%test.image.graphicsmagic.cmd=/usr/local/bin/gm
%prod.image.graphicsmagic.cmd=/usr/bin/gm

# Absolute path of where to store uploaded / transformed images
image.store.path=/tmp/imageStore
%prod.image.store.path=/mnt/iipimage

# Absolute path of where to do temporary image operations
image.tmp.path=/tmp
%prod.image.tmp.path=/mnt/rawImage/tmp

# FastCGI IIPSRV module URL
iipsrv.url=http://localhost:8983/fastcgi/fcgi-bin/iipsrv.fcgi
%prod.iipsrv.url=http://vps17.delving.org/cgi-bin/iipsrv.fcgi

###### Properties that come from ported code / copied verbatim

debug=false

# Path to the themes.xml file that defines the different themes for the portal

portal.theme.file = delving_themes.yml


###############################################
#                                             #
#       services WebApp settings              #
#                                             #
###############################################

# The name of the record-definition that is used to index from OAI-PMH repository

services.harvindexing.prefix = ese
# The secrect password that is used to generate the accesskeys for OAI-PMH, Sip-Creator, and other Servcicse

services.password = delvingmelvin

# Allow access to search API via accessKey or completely open

services.api.useAccessKey = false


###############################################
#                                             #
#       Services OAI-PMH  Repository settings #
#                                             #
###############################################

# The name of the repository that is given in the ?verb=Identify response

services.pmh.repositoryName = Delving MetaRepo

# The administrator email that is given in the ?verb=Identify response

services.pmh.adminEmail = somebody@delving.eu

# The earliest Datestamp of the repository and the one that is given in the ?verb=Identify response

services.pmh.earliestDateStamp = 1990-02-01T12:00:00Z

# The name of the OAI-PMH repository that is given in the ?verb=Identify response

services.pmh.repositoryIdentifier = meta-repo.delving.eu

# The sample identifier that is given in the ?verb=Identify response. It is constructed of the CollectionID + the MongoDB id

services.pmh.sampleIdentifier = 00101_Ag_NO_sffDF:4c277cd8f208d29792096c1e

# The number of records returned by the OAI-PMH repository per ?verb=List* request

services.pmh.responseListSize = 100

# The time to live for each Harvest step before being cleaned up. So time (now) + this value is the experationDate

services.pmh.harvestStepCleanupDelay = 15000

# The name of the OAI-PMH  reposistory database in mongodb. This db is created when the application starts up the first time.

services.mongo.dbName = MetaRepo


###############################################
#                                             #
#       Themes settings, temporary location   #
#                                             #
###############################################

themes.default.recentCollectionsCount=3
themes.default.recentStoriesCount=3
themes.default.recentObjectsCount=12